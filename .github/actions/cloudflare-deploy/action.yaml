name: "Deploy to Cloudflare"
description: "Prunes, builds, and deploys the web app to Cloudflare"

runs:
  using: "composite"
  env:
    API_BASE_URL: ${{ vars.API_BASE_URL }}
    API_KEY: ${{ secrets.API_KEY }}
    APP_BASE_URL: ${{ vars.APP_BASE_URL }}
    AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
    AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
    AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
    CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
    CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
    TURBO_API: ${{ vars.TURBO_API }}
    TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  steps:
    - name: Assert DEPLOY_ENV
      run: |
        if [ -z "${{ vars.DEPLOY_ENV }}" ]; then
          echo "Error: DEPLOY_ENV is not set"
          exit 1
        fi
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      with:
        version: 10.10.0

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"
        cache: "pnpm"

    - name: Prep for build
      run: pnpx turbo prune --scope=web
      shell: bash

    - name: Install dependencies
      working-directory: ./out
      run: pnpm install
      shell: bash

    - name: Deploy secrets to Cloudflare
      working-directory: ./out/apps/web
      run: |
        echo "${{ secrets.API_KEY }}" | pnpx wrangler secret put API_KEY --env ${{ vars.DEPLOY_ENV }}
        echo "${{ secrets.AUTH0_SECRET }}" | pnpx wrangler secret put AUTH0_SECRET --env ${{ vars.DEPLOY_ENV }}
        echo "${{ secrets.AUTH0_CLIENT_SECRET }}" | pnpx wrangler secret put AUTH0_CLIENT_SECRET --env ${{ vars.DEPLOY_ENV }}
      shell: bash

    - name: Deploy to Cloudflare
      working-directory: ./out
      run: pnpx turbo run cf-deploy
      shell: bash
