name: CI

on:
  pull_request:
    branches:
      - main

env:
  TURBO_API: ${{ vars.TURBO_API }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}-api
  VERSION: ${{ github.sha }}
  TURBO_SCM_BASE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
  PNPM_HOME: "/pnpm-store"

jobs:
  monorepo:
    name: Build monorepo
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpx turbo run ci --affected

      - name: Lint
        run: pnpm lint:md && pnpx turbo lint --affected

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # To ensure since_last_remote_commit works on initial PR open

      - name: Check for changed Dockerfile
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          since_last_remote_commit: true
          files_yaml: |
            dockerfile:
              - apps/api/Dockerfile
              - apps/api/.dockerignore
              - .github/workflows/ci.yaml

      - name: List changed Dockerfiles
        if: steps.changed-files.outputs.dockerfile_any_changed == 'true'
        env:
          DOCKER_ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.dockerfile_all_changed_files }}
        run: |
          echo "Dockerfiles changed: $DOCKER_ALL_CHANGED_FILES"

      - name: Stop workflow if no changed Dockerfiles
        if: steps.changed-files.outputs.dockerfile_any_changed != 'true'
        env:
          GH_TOKEN: ${{ secrets. GITHUB_TOKEN }}
        run: |
          echo "No change to Dockerfile, skipping build."

      # This method of caching pnpm files in Docker builds during CI workflows is from
      # https://dev.to/henryjw/caching-pnpm-modules-in-docker-builds-in-github-actions-mj7#implementation
      - name: Cache pnpm
        if: steps.changed-files.outputs.dockerfile_any_changed == 'true'
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: pnpm-store
          key: pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Inject cache into Docker
        if: steps.changed-files.outputs.dockerfile_any_changed == 'true'
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "pnpm-store": "${{ env.PNPM_HOME }}"
            }
          skip-extraction: ${{ steps.pnpm-cache.outputs.cache-hit }}

      - name: Log in to GitHub Container Registry
        if: steps.changed-files.outputs.dockerfile_any_changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.changed-files.outputs.dockerfile_any_changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: false
          cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:cache
          secrets: |
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
          build-args: |
            VERSION=dev
            TURBO_API=${{ env.TURBO_API }}
            TURBO_TEAM=${{ env.TURBO_TEAM }}
            PNPM_HOME=${{ env.PNPM_HOME }}
