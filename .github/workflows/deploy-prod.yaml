name: Deploy - prod

on:
  release:
    types: [published]

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract tag name
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Docker build & push
        uses: ./.github/actions/docker-build
        with:
          version: ${{ env.VERSION }}
          push: true
          tag_latest: true
          turbo_token: ${{ secrets.TURBO_TOKEN }}
          turbo_api: ${{ vars.TURBO_API }}
          turbo_team: ${{ vars.TURBO_TEAM }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy image
        run: |
          curl -X POST "${{ vars.WATCHTOWER_WEBHOOK_URL}}" \
          -f --show-error \
          -H "Authorization: Bearer ${{ secrets.WATCHTOWER_API_KEY }}" \
          -H "CF-Access-Client-Id: ${{ vars.CF_ACCESS_CLIENT_ID }}" \
          -H "CF-Access-Client-Secret: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}"

  cloudflare:
    name: Deploy to Cloudflare
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: prod
      url: ${{ vars.APP_BASE_URL }}
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Cloudflare
        uses: ./.github/actions/cloudflare-deploy
        with:
          api_base_url: ${{ vars.API_BASE_URL }}
          api_key: ${{ secrets.API_KEY }}
          app_base_url: ${{ vars.APP_BASE_URL }}
          auth0_audience: ${{ vars.AUTH0_AUDIENCE }}
          auth0_client_id: ${{ vars.AUTH0_CLIENT_ID }}
          auth0_client_secret: ${{ secrets.AUTH0_CLIENT_SECRET }}
          auth0_domain: ${{ vars.AUTH0_DOMAIN }}
          auth0_secret: ${{ secrets.AUTH0_SECRET }}
          cloudflare_account_id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          deploy_env: ${{ vars.DEPLOY_ENV }}
